
<head>
  <script src="javascripts/vexflow-min.js"></script>
  <script src="http://code.jquery.com/jquery-2.1.0.min.js"></script>
  <script src="javascripts/raphael-min.js"></script>

  <style type="text/css">
    canvas {
      background: #eed;
      padding: 10px;
      border: 10px solid #ddc;
    }

    div.egcode {
      font-family: Courier;
      font-size: 14px;
    }
  </style>

</head>

<form>
  Root:<br>
  <input type="radio" name="root" value="C">C
  <input type="radio" name="root" value="D">D
  <input type="radio" name="root" value="E">E
  <input type="radio" name="root" value="F">F
  <input type="radio" name="root" value="G">G
  <input type="radio" name="root" value="A">A
  <input type="radio" name="root" value="B">B
  <br>

  Quality: <br>
  <input type="radio" name="quality" value="M">Major
  <input type="radio" name="quality" value="m">Minor
  <input type="radio" name="quality" value="dim">Diminished
  <input type="radio" name="quality" value="+">Augmented
  <br>
  <input type="radio" name="quality" value="6">6
  <input type="radio" name="quality" value="M7">Maj7
  <input type="radio" name="quality" value="m7">m7
  <input type="radio" name="quality" value="7">7
  <input type="radio" name="quality" value="m6">m6
  <input type="radio" name="quality" value="7">7
  <input type="radio" name="quality" value="m7b5">m7b5
  <input type="radio" name="quality" value="dim7">dim7
  <input type="radio" name="quality" value="mM7">mM7
  <input type="radio" name="quality" value="M7#5">M7#5
  <input type="radio" name="quality" value="7#5">7#5
  <br>
  <input type="submit" value="Submit"><br>
</form>

<%= @chord %>
<% @chord.map! {|n| n.downcase + "/4"} %>
<%= @chord %>

<div class="example a" example="a">
  <canvas width="525" height="120"></canvas>
    <p>
    <script>
      var canvas = $("div.a canvas")[0];
        var renderer = new Vex.Flow.Renderer(canvas,
          Vex.Flow.Renderer.Backends.CANVAS);

        var ctx = renderer.getContext();
        var stave = new Vex.Flow.Stave(10, 0, 500);
        stave.addClef("treble").setContext(ctx).draw();

        // Create the notes
        var notes = [
        new Vex.Flow.StaveNote({ keys: <%= @chord %>, duration: "w" })
        ];

        // Create a voice in 4/4
        var voice = new Vex.Flow.Voice({
          num_beats: 4,
          beat_value: 4,
          resolution: Vex.Flow.RESOLUTION
        });

        // Add notes to voice
        voice.addTickables(notes);

        // Format and justify the notes to 500 pixels
        var formatter = new Vex.Flow.Formatter().
          joinVoices([voice]).format([voice], 500);
  
        // Render voice
        voice.draw(ctx, stave);
    </script>
  </p>
</div>
